#!/usr/bin/env python3

import flask
import pickle
import google.oauth2.credentials
import google_auth_oauthlib.flow
import googleapiclient.discovery

SHEET_ID = '1Gc0AkZnVHlCR7fJfT8CzEl015D3V43E0Gth-oow8XKk'
TEXTER_LIST = 'TexterList'
CAMPAIGN_LIST = 'CampaignList'
AVAILABLE_TEXTS = 'AvailableTexts'

app = flask.Flask(__name__)

credentials = None
spreadsheets = None

def oauth_flow(**kwargs):
    return google_auth_oauthlib.flow.Flow.from_client_secrets_file('client_secret.json',
            scopes=['https://www.googleapis.com/auth/spreadsheets.readonly'],
            redirect_uri = flask.url_for('oauth2callback', _external=True),
            **kwargs)

@app.route('/activate')
def activate():
    global state
    flow = oauth_flow()
    authorization_url, state = flow.authorization_url(access_type='offline')
    return flask.redirect(authorization_url)

@app.route('/oauth2callback')
def oauth2callback():
    global credentials
    global spreadsheets
    flow = oauth_flow(state = state)
    flow.fetch_token(authorization_response = flask.request.url)
    credentials = flow.credentials

    spreadsheets = googleapiclient.discovery.build('sheets', 'v4', credentials=credentials).spreadsheets()
    return flask.redirect('/')

@app.route('/')
def top():
    if not spreadsheets:
        return 'Not active'
    res = spreadsheets.get(spreadsheetId = SHEET_ID, fields = 'namedRanges').execute()
    return flask.jsonify(res)

app.run(ssl_context=('fullchain.pem', 'privkey.pem'), debug=True)
